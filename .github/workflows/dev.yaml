name: ci-dev

on:
  push:
    branches:
      - "dev"

jobs:
  db:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Deploy App to Server
        uses: appleboy/ssh-action@master
        # env:
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /
            cd /home/limitbreak/test
            sudo docker build -t mysql_image .
            sudo docker container run --name db_mysql --rm --restart on-failure\
            -e MYSQL_DATABASE=${{ secrets.DB_NAME }}\
            -e MYSQL_USERNAME=${{ secrets.DB_USERNAME }}\
            -e MYSQL_PASSWORD=${{ secrets.DB_PASSWORD }}\
            -e MYSQL_ROOT_PASSWORD=${{ secrets.DB_ROOT_PASSWORD }}\
            -p 13306:3306 -d mysql_image

  build:
    needs: db
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Connect to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest

  deploy:
    needs: build
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Deploy App to Server
        uses: appleboy/ssh-action@master
        # env:
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            whoami
            echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}
            sudo docker container run --name ${{ vars.CONTAINER_NAME }} --rm\
            -e DB_DRIVER=${{ secrets.DB_DRIVER }}\
            -e DB_NAME=${{ secrets.DB_NAME }}\
            -e DB_USER=${{ secrets.DB_USERNAME }}\
            -e DB_PASSWORD=${{ secrets.DB_PASSWORD }}\
            -e API_BASE_PATH=${{ vars.API_BASE_PATH }}\
            -e APP_ADDRESS=${{ secrets.APP_ADDRESS }}\
            -e APP_PORT=${{ secrets.APP_PORT }}\
            -e JWT_ACCESS_SECRET_KEY=${{ secrets.JWT_ACCESS_SECRET_KEY }}\
             -p 8080:8991 ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}
