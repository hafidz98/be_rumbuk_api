name: ci-dev
run-name: App CICD
on:
  #push:
  pull_request:
    branches:
      - ""

jobs:
  db:
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Setup Database to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            cd /
            cd /home/limitbreak/test
            sudo docker rm -f db_mysql || true
            sudo docker build -t mysql_image . -f Dockerfile.db
            sudo docker container run --name db_mysql \
            -e MYSQL_ROOT_PASSWORD='${{secrets.DB_ROOT_PASSWORD}}' \
            -v mysql:/var/lib/mysql \
            --restart always \
            -dit --net=rumbuk-net --hostname=db_mysql mysql_image

  build:
    needs: db
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Connect to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Build and Push
        uses: docker/build-push-action@v4
        with:
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}:latest

  deploy:
    needs: build
    environment: dev
    runs-on: ubuntu-latest
    steps:
      - name: Deploy App to Server
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          key: ${{ secrets.SERVER_KEY }}
          port: ${{ secrets.SERVER_PORT }}
          script: |
            echo ${{ secrets.DOCKER_ACCESS_TOKEN }} | sudo docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
            sudo docker rm -f ${{ vars.CONTAINER_NAME }}
            sudo docker pull ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}
            sudo docker run -dit --restart always --name ${{ vars.CONTAINER_NAME }} -e DB_DRIVER='${{ secrets.DB_DRIVER }}' -e DB_HOST='db_mysql' -e DB_PORT='3306' -e DB_NAME='app_rumbuk_db' -e DB_USER='${{ secrets.DB_USERNAME }}' -e DB_PASSWORD='${{ secrets.DB_ROOT_PASSWORD }}' -e API_BASE_PATH='/v1/rumbuk' -e APP_ADDRESS='' -e APP_PORT='8991' -e JWT_ACCESS_SECRET_KEY='${{ secrets.JWT_ACCESS_SECRET_KEY }}' -p 80:80 -p 443:8991 --net=rumbuk-net --hostname=${{ vars.CONTAINER_NAME }} ${{ secrets.DOCKER_USERNAME }}/${{ vars.IMAGE_NAME }}
